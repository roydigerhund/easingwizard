{
  "openapi": "3.1.0",
  "info": {
    "title": "Easing Wizard API",
    "version": "1.0.0",
    "description": "A comprehensive API for generating and managing CSS easing curves",
    "contact": {
      "url": "https://easingwizard.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.easingwizard.com/v1",
      "description": "Production API server"
    }
  ],
  "paths": {
    "/curves/{id}": {
      "get": {
        "summary": "Get curve by ID",
        "description": "Retrieve a curve configuration by its encoded ID",
        "operationId": "getCurve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Encoded curve ID",
            "example": "abc123def"
          }
        ],
        "responses": {
          "200": {
            "description": "Curve configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EasingCurveResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Curves"]
      }
    },
    "/curves/{type}": {
      "post": {
        "summary": "Create curve from parameters",
        "description": "Generate a new easing curve from input parameters",
        "operationId": "createCurve",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EasingType"
            },
            "description": "Type of easing curve to create",
            "example": "bezier"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BezierInput"
                  },
                  {
                    "$ref": "#/components/schemas/SpringInput"
                  },
                  {
                    "$ref": "#/components/schemas/BounceInput"
                  },
                  {
                    "$ref": "#/components/schemas/WiggleInput"
                  },
                  {
                    "$ref": "#/components/schemas/OvershootInput"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Generated curve",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EasingCurveResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Curves"]
      }
    },
    "/presets": {
      "get": {
        "summary": "Get preset curves",
        "description": "Retrieve a collection of preset easing curves, optionally filtered by type",
        "operationId": "getPresets",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EasingType"
            },
            "description": "Filter presets by easing type",
            "example": "bezier"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of presets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid type parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Presets"]
      }
    },
    "/healthz": {
      "get": {
        "summary": "Health check",
        "description": "Check API health status",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": ["status", "timestamp"]
                }
              }
            }
          }
        },
        "tags": ["Health"]
      }
    }
  },
  "components": {
    "schemas": {
      "BezierInput": {
        "description": "Bezier curve configuration with two control points",
        "type": "object",
        "properties": {
          "x1": {
            "description": "First control point X coordinate (0-1)",
            "example": 0.25,
            "type": "number",
            "minimum": 0,
            "maximum": 1
          },
          "y1": {
            "description": "First control point Y coordinate (-1 to 2)",
            "example": 0.1,
            "type": "number",
            "minimum": -1,
            "maximum": 2
          },
          "x2": {
            "description": "Second control point X coordinate (0-1)",
            "example": 0.75,
            "type": "number",
            "minimum": 0,
            "maximum": 1
          },
          "y2": {
            "description": "Second control point Y coordinate (-1 to 2)",
            "example": 0.9,
            "type": "number",
            "minimum": -1,
            "maximum": 2
          }
        },
        "required": ["x1", "y1", "x2", "y2"]
      },
      "EasingCurveResponse": {
        "description": "Complete easing curve response with metadata and links",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the curve",
            "example": "abc123def",
            "type": "string"
          },
          "type": {
            "description": "Type of easing curve",
            "example": "bezier",
            "$ref": "#/components/schemas/EasingType"
          },
          "generated_at": {
            "description": "ISO 8601 timestamp when the curve was generated",
            "example": "2025-07-03T12:00:00Z",
            "type": "string",
            "format": "date-time",
            "pattern": "^((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))T([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(\\.\\d+)?(Z)$"
          },
          "input": {
            "description": "Input parameters used to generate the curve",
            "anyOf": [
              {
                "$ref": "#/components/schemas/BezierInputOutput"
              },
              {
                "$ref": "#/components/schemas/SpringInput"
              },
              {
                "$ref": "#/components/schemas/BounceInput"
              },
              {
                "$ref": "#/components/schemas/WiggleInput"
              },
              {
                "$ref": "#/components/schemas/OvershootInput"
              }
            ]
          },
          "output": {
            "$ref": "#/components/schemas/EasingOutput"
          },
          "links": {
            "description": "HATEOAS navigation links",
            "type": "object",
            "properties": {
              "self": {
                "description": "Link to this curve resource",
                "example": "https://api.easingwizard.com/v1/curves/abc123def",
                "type": "string",
                "format": "uri"
              },
              "preview_svg": {
                "description": "Data URI for SVG preview of the curve",
                "example": "data:image/svg+xml;utf8,<svg>...</svg>",
                "type": "string"
              },
              "share_url": {
                "description": "Shareable URL for this curve",
                "example": "https://easingwizard.com/#abc123def",
                "type": "string",
                "format": "uri"
              }
            },
            "required": ["self", "preview_svg", "share_url"]
          }
        },
        "required": ["id", "type", "generated_at", "input", "output", "links"]
      },
      "EasingType": {
        "id": "EasingType",
        "description": "Type of easing function",
        "example": "bezier",
        "enum": ["bezier", "spring", "bounce", "wiggle", "overshoot"]
      },
      "SpringInput": {
        "description": "Spring animation configuration",
        "type": "object",
        "properties": {
          "mass": {
            "description": "Mass of the spring (1-5)",
            "example": 1.5
          },
          "stiffness": {
            "description": "Stiffness of the spring (0-100)",
            "example": 80
          },
          "damping": {
            "description": "Damping factor of the spring (0-100)",
            "example": 10
          },
          "accuracy": {
            "description": "Accuracy level for the linear easing approximation",
            "example": "high",
            "enum": ["low", "medium", "high", "ultra"]
          }
        },
        "required": ["mass", "stiffness", "damping", "accuracy"]
      },
      "BounceInput": {
        "description": "Bounce animation configuration",
        "type": "object",
        "properties": {
          "bounces": {
            "description": "Number of bounces (1-10)",
            "example": 3
          },
          "damping": {
            "description": "Damping factor for bounce decay (0-100)",
            "example": 2.5
          },
          "accuracy": {
            "description": "Accuracy level for the linear easing approximation",
            "example": "high",
            "enum": ["low", "medium", "high", "ultra"]
          }
        },
        "required": ["bounces", "damping", "accuracy"]
      },
      "WiggleInput": {
        "description": "Wiggle animation configuration",
        "type": "object",
        "properties": {
          "wiggles": {
            "description": "Number of wiggle oscillations (1-10)",
            "example": 5
          },
          "damping": {
            "description": "Damping factor for wiggle decay (0-100)",
            "example": 15.5
          },
          "accuracy": {
            "description": "Accuracy level for the linear easing approximation",
            "example": "high",
            "enum": ["low", "medium", "high", "ultra"]
          }
        },
        "required": ["wiggles", "damping", "accuracy"]
      },
      "OvershootInput": {
        "description": "Overshoot animation configuration",
        "type": "object",
        "properties": {
          "style": {
            "description": "Style of overshoot animation",
            "example": "out",
            "enum": ["in", "out", "inOut"]
          },
          "mass": {
            "description": "Mass factor (1-5)",
            "example": 2.5
          },
          "damping": {
            "description": "Damping factor (0-100)",
            "example": 50
          },
          "accuracy": {
            "description": "Accuracy level for the linear easing approximation",
            "example": "high",
            "enum": ["low", "medium", "high", "ultra"]
          }
        },
        "required": ["style", "mass", "damping", "accuracy"]
      },
      "EasingOutput": {
        "description": "Generated easing function output",
        "type": "object",
        "properties": {
          "css": {
            "description": "CSS easing function string",
            "example": "cubic-bezier(0.25, 0.1, 0.75, 0.9)",
            "type": "string"
          },
          "tailwind_css": {
            "description": "Tailwind CSS compatible easing string",
            "example": "ease-[cubic-bezier(0.25,0.1,0.75,0.9)]",
            "type": "string"
          },
          "svg_path": {
            "description": "SVG path for bezier curves",
            "example": "M0,100 C25,90 75,10 100,0",
            "type": "string"
          },
          "svg_polyline": {
            "description": "SVG polyline for linear easing curves",
            "example": "0,100 10,90 20,80 30,70 40,60 50,50 60,40 70,30 80,20 90,10 100,0",
            "type": "string"
          }
        },
        "required": ["css", "tailwind_css"]
      },
      "BezierInputOutput": {
        "description": "Bezier curve configuration with two control points",
        "type": "object",
        "properties": {
          "x1": {
            "description": "First control point X coordinate (0-1)",
            "example": 0.25
          },
          "y1": {
            "description": "First control point Y coordinate (-1 to 2)",
            "example": 0.1
          },
          "x2": {
            "description": "Second control point X coordinate (0-1)",
            "example": 0.75
          },
          "y2": {
            "description": "Second control point Y coordinate (-1 to 2)",
            "example": 0.9
          }
        },
        "required": ["x1", "y1", "x2", "y2"]
      }
    }
  },
  "tags": [
    {
      "name": "Curves",
      "description": "Operations for creating and retrieving easing curves"
    },
    {
      "name": "Presets",
      "description": "Operations for retrieving preset easing curves"
    },
    {
      "name": "Health",
      "description": "API health check endpoints"
    }
  ]
}
